#!/usr/bin/perl -w

use strict;
use FindBin;
use lib $FindBin::Bin;
#use lib "/net/fantasia/home/hmkang/bin/utils/";
use hyunlib qw(initRef getCpGs);
use wGetOptions qw(wGetOptions wpod2usage);

my $invcf = "";
my $outvcf = "";
my $sitevcf = "";
my $binbgzip = "bgzip";
my $bintabix = "tabix";
my $binbcftools = "bcftools";

wGetOptions(
    "-Add rsID into VCF",
    "--Required Options",
    "vcf=s",[\$invcf,"Input VCF file"],
    "out=s",[\$outvcf,"Output VCF file"],
    "site=s",[\$sitevcf,"Site VCF file"],
    "--Additional Options",
    "bcftools=s",[\$binbcftools,"Path to bcftools"],    
    ) || wpod2usage(2);


wpod2usage(2) unless ( ( $invcf ) && ( $sitevcf ) );

if ( $outvcf =~ /\.gz$/ ) { open(OUT,"| $binbgzip -c > $outvcf") || die "Cannot open file\n"; }
elsif ( $outvcf =~ /\.bcf$/ ) { open(OUT,"| $binbcftools view --no-version -Ob -o $outvcf /dev/stdin") || die "Cannot open file\n"; }
elsif ( $outvcf ) { open(OUT,">$outvcf") || die "Cannot open file\n"; }
else { *OUT = *STDOUT; }

if ( $sitevcf =~ /\.gz$/ ) { open(SITE,"zcat $sitevcf |") || die "Cannot open file\n"; }
elsif ( $sitevcf =~ /\.bcf$/ ) { open(SITE,"$binbcftools view --no-version $sitevcf |") || die "Cannot open file\n"; }
elsif ( $sitevcf ) { open(SITE,$sitevcf) || die "Cannot open file\n"; }

my %h = ();
my $ndic = 0;
while(<SITE>) {
    next if ( /^#/ );
    my ($chrom,$pos,$id,$ref,$alt) = split;
    $h{"$chrom:$pos:$ref:$alt"} = 1;
    ++$ndic;
}
close SITE;

if ( $invcf =~ /\.gz$/ ) { open(IN,"zcat $invcf |") || die "Cannot open file\n"; }
elsif ( $invcf =~ /\.bcf$/ ) { open(IN,"$binbcftools view --no-version $invcf |") || die "Cannot open file\n"; }
elsif ( $invcf ) { open(IN,$invcf) || die "Cannot open file\n"; }

my $nup = 0;
while(<IN>) {
    if ( /^#/ ) {
	print OUT $_;
    }
    else {
	my ($chrom,$pos,$id,$ref,$alt,$qual,$filt,@F) = split;
	if ( defined($h{"$chrom:$pos:$ref:$alt"}) ) {
	    print OUT join("\t",$chrom,$pos,$id,$ref,$alt,$qual,"PASS",@F)."\n";
	    ++$nup;
	}
	else {
	    print OUT $_;	    
	}
    }
}

close IN;
close OUT;

print STDERR "Finished updating $nup variants out of $ndic\n";
